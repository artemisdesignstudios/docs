"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1017],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,h=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={},i="Configuring Your Paragon PCB with Vial",l={unversionedId:"Downloads/Paragon/PCBs/vial_pcb_configuration",id:"Downloads/Paragon/PCBs/vial_pcb_configuration",title:"Configuring Your Paragon PCB with Vial",description:"Prerequisites:",source:"@site/docs/03_Downloads/Paragon/PCBs/02_vial_pcb_configuration.md",sourceDirName:"03_Downloads/Paragon/PCBs",slug:"/Downloads/Paragon/PCBs/vial_pcb_configuration",permalink:"/docs/Downloads/Paragon/PCBs/vial_pcb_configuration",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuring Your Paragon PCB with VIA",permalink:"/docs/Downloads/Paragon/PCBs/via_pcb_configuration"},next:{title:"Paragon Plate Files",permalink:"/docs/Downloads/Paragon/Plate Files"}},p={},s=[{value:"Prerequisites:",id:"prerequisites",level:2},{value:"Flashing the PCB",id:"flashing-the-pcb",level:2},{value:"Configuring your PCB through Vial",id:"configuring-your-pcb-through-vial",level:2},{value:"Configuring the Encoder",id:"configuring-the-encoder",level:2},{value:"Common Issues",id:"common-issues",level:2}],c={toc:s},u="wrapper";function m(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuring-your-paragon-pcb-with-vial"},"Configuring Your Paragon PCB with Vial"),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install ",(0,r.kt)("strong",{parentName:"li"},"QMK Toolbox")," to flash the PCB.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/qmk/qmk_toolbox/releases"},"QMK Toolbox")))),(0,r.kt)("li",{parentName:"ul"},"USB C cable to connect the PCB to your device.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"flashing-the-pcb"},"Flashing the PCB"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download the appropriate hex file for your PCB. Make sure the file extension remains as ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},".hex")),"."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Solder:")," ",(0,r.kt)("a",{target:"_blank",href:n(3773).Z},"paragon_solder_vial.hex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Hotswap:")," ",(0,r.kt)("a",{target:"_blank",href:n(2347).Z},"paragon_hotswap_vial.hex")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open QMK Toolbox.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Set the PCB into ",(0,r.kt)("strong",{parentName:"p"},"DFU mode."),"\n",(0,r.kt)("strong",{parentName:"p"},"Note:")," the PCB must be connected to your device to be set into DFU mode."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"DFU mode can be enabled through the following methods:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Press the ",(0,r.kt)("inlineCode",{parentName:"li"},"RESET")," button, located on the back of the PCB near the JST connector."),(0,r.kt)("li",{parentName:"ol"},"If you already built your PCB, hold down both ",(0,r.kt)("inlineCode",{parentName:"li"},"SHIFT")," keys (left and right) and press ",(0,r.kt)("inlineCode",{parentName:"li"},"B"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Note:")," We do ",(0,r.kt)("strong",{parentName:"li"},"NOT")," recommend building your PCB without testing it first."))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"QMK Toolbox will tell you if the PCB is in DFU mode with the following message:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Atmel DFU device connected: ATMEL ATm32U4DFU (03EB:2FF4:0000)\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In QMK Toolbox, click ",(0,r.kt)("inlineCode",{parentName:"p"},"Open")," and load the downloaded hex file for your PCB.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("inlineCode",{parentName:"p"},"Flash"),". A successful flash will provide the following message:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Attempting to flash, please don't remove device\n> dfu-programmer atmega32u4 erase --force\n> Erasing flash...  Success\n> Checking memory from 0x0 to 0x6FFF...  Empty\n> dfu-programmer atmega32u4 flash --force /Users/<your_user>/Downloads/paragon_<PCB_type>_vial.hex\n> 0%                            100%  Programming 0x5A80 bytes...\n> [>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]  Success\n> 0%                            100%  Reading 0x7000 bytes...\n> [>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]  Success\n> Validating...  Success\n> 0x5A80 bytes written into 0x7000 bytes memory (80.80%)\n> dfu-programmer atmega32u4 reset\nFlash complete\nAtmel DFU device disconnected: ATMEL ATm32U4DFU (03EB:2FF4:0000)\n")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"configuring-your-pcb-through-vial"},"Configuring your PCB through Vial"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Head over to ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://vial.rocks"},"vial.rocks"))," with your PCB connected to your device.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on ",(0,r.kt)("inlineCode",{parentName:"p"},"Start Vial"),". A list of connected devices should pop up.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select ",(0,r.kt)("inlineCode",{parentName:"p"},"Paragon")," from the device pop-up. At this point, the Vial UI should show up and display the layout schematic."))),(0,r.kt)("h2",{id:"configuring-the-encoder"},"Configuring the Encoder"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To configure the behavior of the encoder in Vial, click on either of the ",(0,r.kt)("strong",{parentName:"p"},"two encoder buttons")," shown in the layout schematic.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The left-side encoder shows an icon of turning the encoder counterclockwise. The right-side encoder shows an icon of turning the encoder clockwise.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Clicking on either encoder button will allow you to map another function to it from the provided set."))),(0,r.kt)("h2",{id:"common-issues"},"Common Issues"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"My left ",(0,r.kt)("inlineCode",{parentName:"strong"},"Alt")," key isn't working.")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Make sure you flashed the PCB with the correct hex file and loaded the JSON in VIA to configure the layout."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"I received the following error when flashing my PCB:")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"erasing flash success.\nchecking memory 0x0 to 0x6fff empty.\nerror reading line 1.\natmega32u4 reset\nflash complete\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Make sure to download the hex file correctly and save it with the ",(0,r.kt)("inlineCode",{parentName:"li"},".hex")," extension.")))))}m.isMDXComponent=!0},2347:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/paragon_vial_hotswap-ed28579a96e99e6fb01d8a13f44ea485.hex"},3773:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/paragon_vial_solder-12c72c197f2826c9ec16caa5b55ff162.hex"}}]);