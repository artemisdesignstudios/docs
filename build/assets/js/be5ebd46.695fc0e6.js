"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[570],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(a),d=r,k=c["".concat(p,".").concat(d)]||c[d]||u[d]||o;return a?n.createElement(k,i(i({ref:t},m),{},{components:a})):n.createElement(k,i({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3729:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const o={},i="Configuring Your Paragon PCB with VIA",l={unversionedId:"Downloads/Paragon/PCBs/via_pcb_configuration",id:"Downloads/Paragon/PCBs/via_pcb_configuration",title:"Configuring Your Paragon PCB with VIA",description:"05.11.2023 Update:",source:"@site/docs/03_Downloads/Paragon/PCBs/01_via_pcb_configuration.md",sourceDirName:"03_Downloads/Paragon/PCBs",slug:"/Downloads/Paragon/PCBs/via_pcb_configuration",permalink:"/docs/Downloads/Paragon/PCBs/via_pcb_configuration",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Paragon PCB Info",permalink:"/docs/category/paragon-pcb-info"},next:{title:"Configuring Your Paragon PCB with Vial",permalink:"/docs/Downloads/Paragon/PCBs/vial_pcb_configuration"}},p={},s=[{value:"05.11.2023 Update:",id:"05112023-update",level:3},{value:"Prerequisites:",id:"prerequisites",level:2},{value:"Flashing the PCB",id:"flashing-the-pcb",level:2},{value:"Configuring your PCB through VIA",id:"configuring-your-pcb-through-via",level:2},{value:"Configuring the Encoder",id:"configuring-the-encoder",level:2},{value:"Common Issues",id:"common-issues",level:2}],m={toc:s},c="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(c,(0,n.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuring-your-paragon-pcb-with-via"},"Configuring Your Paragon PCB with VIA"),(0,r.kt)("h3",{id:"05112023-update"},"05.11.2023 Update:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"New hex files have been created for the Paragon PCBs which now provide support for customizing the encoder out of the box!")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install ",(0,r.kt)("strong",{parentName:"li"},"QMK Toolbox")," to flash the PCB.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/qmk/qmk_toolbox/releases"},"QMK Toolbox")))),(0,r.kt)("li",{parentName:"ul"},"USB C cable to connect the PCB to your device."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Download and unzip the following file:")," ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{target:"_blank",href:a(4974).Z},"paragon_via_pcb_files.zip")))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"flashing-the-pcb"},"Flashing the PCB"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Locate the appropriate ",(0,r.kt)("strong",{parentName:"p"},"hex file")," for your PCB. Make sure the file extension remains as ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},".hex")),"."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Solder:")," ",(0,r.kt)("a",{target:"_blank",href:a(4175).Z},"paragon_solder_via.hex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Hotswap:")," ",(0,r.kt)("a",{target:"_blank",href:a(1860).Z},"paragon_hotswap_via.hex")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open QMK Toolbox.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Set the PCB into ",(0,r.kt)("strong",{parentName:"p"},"DFU mode."),"\n",(0,r.kt)("strong",{parentName:"p"},"Note:")," the PCB must be connected to your device to be set into DFU mode."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"DFU mode can be enabled through the following methods:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Press the ",(0,r.kt)("inlineCode",{parentName:"li"},"RESET")," button, located on the back of the PCB near the JST connector."),(0,r.kt)("li",{parentName:"ol"},"If you already built your PCB, hold down both ",(0,r.kt)("inlineCode",{parentName:"li"},"SHIFT")," keys (left and right) and press ",(0,r.kt)("inlineCode",{parentName:"li"},"B"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Note:")," We do ",(0,r.kt)("strong",{parentName:"li"},"NOT")," recommend building your PCB without testing it first."))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"QMK Toolbox will tell you if the PCB is in DFU mode with the following message:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Atmel DFU device connected: ATMEL ATm32U4DFU (03EB:2FF4:0000)\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In QMK Toolbox, click ",(0,r.kt)("inlineCode",{parentName:"p"},"Open")," and load the downloaded hex file for your PCB.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("inlineCode",{parentName:"p"},"Flash"),". A successful flash will provide the following message:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Attempting to flash, please don't remove device\n> dfu-programmer atmega32u4 erase --force\n> Erasing flash...  Success\n> Checking memory from 0x0 to 0x6FFF...  Empty\n> dfu-programmer atmega32u4 flash --force /Users/<your_user>/Downloads/paragon_<PCB_type>_via.hex\n> 0%                            100%  Programming 0x5A80 bytes...\n> [>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]  Success\n> 0%                            100%  Reading 0x7000 bytes...\n> [>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]  Success\n> Validating...  Success\n> 0x5A80 bytes written into 0x7000 bytes memory (80.80%)\n> dfu-programmer atmega32u4 reset\nFlash complete\nAtmel DFU device disconnected: ATMEL ATm32U4DFU (03EB:2FF4:0000)\n")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"configuring-your-pcb-through-via"},"Configuring your PCB through VIA"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Locate the ",(0,r.kt)("strong",{parentName:"p"},"VIA JSON configuration file")," for the Paragon. It is titled ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{target:"_blank",href:a(3617).Z},"paragon_via_config.json")),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Go to the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://usevia.app/"},"VIA"))," website.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click the ",(0,r.kt)("strong",{parentName:"p"},"Authorize")," button and select ",(0,r.kt)("inlineCode",{parentName:"p"},"Paragon")," from the pop-up dialogue that appears. Performing this action will not change the webpage.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on the ",(0,r.kt)("strong",{parentName:"p"},"Settings")," icon on the far left side of the header tab.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the ",(0,r.kt)("strong",{parentName:"p"},"Settings")," tab, enable ",(0,r.kt)("inlineCode",{parentName:"p"},"Show Design tab"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on the ",(0,r.kt)("inlineCode",{parentName:"p"},"Load")," icon and select the ",(0,r.kt)("inlineCode",{parentName:"p"},"paragon_via_config.json")," file you previously downloaded. Upon loading the file, VIA will ask you to authorize the Paragon PCB again.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You should now be able to head to the ",(0,r.kt)("strong",{parentName:"p"},"Configure")," tab and start manipulating the keymap for your PCB."))),(0,r.kt)("h2",{id:"configuring-the-encoder"},"Configuring the Encoder"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To configure the behavior of the encoder, head over to the ",(0,r.kt)("strong",{parentName:"p"},"Configure")," tab in VIA.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on the ",(0,r.kt)("strong",{parentName:"p"},"encoder button")," located in the top right corner of the layout schematic.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Two options should appear:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Rotate Counterclockwise")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Rotate Clockwise"))),(0,r.kt)("p",{parentName:"li"},"By default, the ",(0,r.kt)("inlineCode",{parentName:"p"},"Rotate Counterclockwise")," setting will be set to ",(0,r.kt)("inlineCode",{parentName:"p"},"KC_VOLU")," (volume up). The ",(0,r.kt)("inlineCode",{parentName:"p"},"Rotate Clockwise")," setting will be set to ",(0,r.kt)("inlineCode",{parentName:"p"},"KC_VOLD")," (volume down).")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To change the settings, click on the field associated with the turn direction, and enter your desired QMK Keycode. A list of QMK Keycodes can be found here: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/qmk/qmk_firmware/blob/master/docs/keycodes.md"},"https://github.com/qmk/qmk_firmware/blob/master/docs/keycodes.md")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Keycode Examples:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Brightness Up: ",(0,r.kt)("inlineCode",{parentName:"li"},"KC_BRIU")),(0,r.kt)("li",{parentName:"ul"},"Brightness Down: ",(0,r.kt)("inlineCode",{parentName:"li"},"KC_BRID"))))))),(0,r.kt)("h2",{id:"common-issues"},"Common Issues"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"My left ",(0,r.kt)("inlineCode",{parentName:"strong"},"Alt")," key isn't working.")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Make sure you flashed the PCB with the correct hex file and loaded the JSON in VIA to configure the layout."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},'The VIA application/website is stuck at "searching for devices". The layout configurator is not appearing.')),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'Make sure you loaded the JSON file into VIA under the "Design" tab.'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"I received the following error when flashing my PCB:")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"erasing flash success.\nchecking memory 0x0 to 0x6fff empty.\nerror reading line 1.\natmega32u4 reset\nflash complete\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Make sure to download the hex file correctly and save it with the ",(0,r.kt)("inlineCode",{parentName:"li"},".hex")," extension.")))))}u.isMDXComponent=!0},1860:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/paragon_hotswap_via-8fd31c6dcdf12346eab14115b1fd4dfa.hex"},4175:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/paragon_solder_via-61a13cc433b145c56a0f7225eb6571be.hex"},3617:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/paragon_via_config-ad45633fad6c644237e1f6973655106b.json"},4974:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/paragon_via_pcb_files-2444b32f4469f25f5dca13fad15e8242.zip"}}]);